from django.db import models
from django.contrib.auth.models import User
import md5, random, datetime

class LastActivity(models.Model):
    user = models.ForeignKey(User)
    timestamp = models.DateTimeField()

class Alert(models.Model):
    time = models.DateTimeField()
    delivered = models.BooleanField(default=False)
    test = models.BooleanField(default=False)

    uuid = models.TextField(blank=True, null=True)
    name = models.TextField(blank=True, mull=True)
    text = models.TextField()
    image = models.TextField(blank=True, null=True)
    amount = models.IntegerField(default=0)
    sponsor = models.BooleanField(default=False)

class Updater(models.Model):
    last_update = models.DateTimeField(default=datetime.datetime(1990,1,1,0,0,0))
    next_update = models.DateTimeField(default=datetime.datetime(1990,1,1,0,0,0))
    last_failure = models.DateTimeField(blank=True,null=True)
    last_failure_message = models.TextField(blank=True, null=True)
    failure_count = models.IntegerField(default=0)
    user = models.ForeignKey(User, blank=True, null=True)
    running = models.BooleanField(default=False)
    type = models.CharField(max_length=255)
    def friendly_type(self):
        from main.appconfig import type_data
        appdata = type_data.get(self.type, None)
        if not appdata: return self.type
        return appdata.get('label', self.type)

    def __str__(self):
        return 'Updater{type=%s}' % self.type

class UpdaterEvent(models.Model):
    external_id = models.CharField(max_length=255, db_index=True)
    timestamp = models.DateTimeField(auto_now_add=True)
    base_updater = models.ForeignKey(Updater, blank=True, null=True)
